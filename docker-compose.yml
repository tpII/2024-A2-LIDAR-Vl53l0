services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8080:80"  # Mapea el puerto 80 del contenedor al puerto 8080 de tu m√°quina
    #network_mode: "host"  # Esto conecta el contenedor directamente a la red del host
    environment:
      # Se actualiza la URI para que, al usar host networking, MongoDB se encuentre en localhost.
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/CYCLOPS
      - BACKEND_HOST=host.docker.internal  # Usamos el nombre del host para acceder a la PC local
    depends_on:
      - mongo
    networks:
      - app_network  # Conectamos a la red personalizada

  frontend:
    build: ./Frontend
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app_network  # Conectamos a la red personalizada


  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network  # Conectamos a la red personalizada

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883"
    #network_mode: "host"
    # Al estar en modo host no se requiere mapear puertos.
    volumes:
      - ./mosquitto/config:/mosquitto/broker
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - app_network  # Conectamos a la red personalizada

networks:
  app_network:
    driver: bridge  # Usamos el controlador de red "bridge" para la re

volumes:
  mongo_data:
